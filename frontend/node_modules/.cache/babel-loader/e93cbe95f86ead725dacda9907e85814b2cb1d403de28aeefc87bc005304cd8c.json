{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\ai-social-bot\\\\frontend\\\\src\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'system',\n    content: 'How can I help you today?'\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    const userInput = input;\n    setInput('');\n    try {\n      console.log('Sending message to backend:', userInput);\n\n      // Send message to backend\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-Id': 'web-chat-user-' + Date.now() // Add a unique session ID\n        },\n        body: JSON.stringify({\n          message: userInput\n        })\n      });\n\n      // Check if response is ok before parsing JSON\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API error:', response.status, errorText);\n        throw new Error(`API returned ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('Received response:', data);\n      if (!data.reply) {\n        console.error('Missing reply in API response:', data);\n        throw new Error('Invalid response format');\n      }\n\n      // Add AI response to chat\n      setMessages(prev => [...prev, {\n        role: 'system',\n        content: data.reply\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => [...prev, {\n        role: 'system',\n        content: 'Sorry, I encountered an error processing your request: ' + error.message\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role === 'user' ? 'user-message' : 'system-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: msg.role === 'user' ? 'You' : 'AI'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message system-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: \"AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask me anything...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading || !input.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"22\",\n            y1: \"2\",\n            x2: \"11\",\n            y2: \"13\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"22 2 15 22 11 13 2 9 22 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"iXLVJeN6weKvzHtyLvVeDv+e2CM=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","role","content","input","setInput","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","userMessage","prev","userInput","console","log","response","fetch","method","headers","Date","now","body","JSON","stringify","message","ok","errorText","text","error","status","Error","data","json","reply","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","value","onChange","target","placeholder","disabled","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/ai-social-bot/frontend/src/ChatBox.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './ChatBox.css';\r\n\r\nfunction ChatBox() {\r\n  const [messages, setMessages] = useState([\r\n    { role: 'system', content: 'How can I help you today?' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Auto-scroll to bottom of messages\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  \r\n  if (!input.trim()) return;\r\n  \r\n  // Add user message to chat\r\n  const userMessage = { role: 'user', content: input };\r\n  setMessages(prev => [...prev, userMessage]);\r\n  setIsLoading(true);\r\n  \r\n  const userInput = input;\r\n  setInput('');\r\n  \r\n  try {\r\n    console.log('Sending message to backend:', userInput);\r\n    \r\n    // Send message to backend\r\n    const response = await fetch('/api/chat', {\r\n      method: 'POST',\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'X-Session-Id': 'web-chat-user-' + Date.now()  // Add a unique session ID\r\n      },\r\n      body: JSON.stringify({ message: userInput })\r\n    });\r\n    \r\n    // Check if response is ok before parsing JSON\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('API error:', response.status, errorText);\r\n      throw new Error(`API returned ${response.status}: ${errorText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('Received response:', data);\r\n    \r\n    if (!data.reply) {\r\n      console.error('Missing reply in API response:', data);\r\n      throw new Error('Invalid response format');\r\n    }\r\n    \r\n    // Add AI response to chat\r\n    setMessages(prev => [...prev, { role: 'system', content: data.reply }]);\r\n  } catch (error) {\r\n    console.error('Error sending message:', error);\r\n    setMessages(prev => [...prev, { \r\n      role: 'system', \r\n      content: 'Sorry, I encountered an error processing your request: ' + error.message\r\n    }]);\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div \r\n            key={index} \r\n            className={`message ${msg.role === 'user' ? 'user-message' : 'system-message'}`}\r\n          >\r\n            <div className=\"message-avatar\">\r\n              {msg.role === 'user' ? 'You' : 'AI'}\r\n            </div>\r\n            <div className=\"message-content\">{msg.content}</div>\r\n          </div>\r\n        ))}\r\n        {isLoading && (\r\n          <div className=\"message system-message\">\r\n            <div className=\"message-avatar\">AI</div>\r\n            <div className=\"typing-indicator\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form className=\"chat-input-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Ask me anything...\"\r\n          disabled={isLoading}\r\n        />\r\n        <button type=\"submit\" disabled={isLoading || !input.trim()}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n            <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n          </svg>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}